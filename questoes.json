data = [
  {
    "pergunta": "o q q eh o pipeline",
    "opcoes": [
      "um jeito de empinar pipa",
      "marca de miojo",
      "aquela parada q a sarita explicou"
    ],
    "resposta": "2",
    "imagem": "images/aoba.jpg"
  },
  {
    "pergunta": "q q eh pata",
    "opcoes": [
      "ih rapaz",
      "kkkk",
      "um pino",
      "aquele treco de hd old"
    ],
    "resposta": "3"
  },
  {
      "pergunta": "Qual é a principal função do módulo de Entrada e Saída?",
      "opcoes": [
          "Intermediar a comunicação entre a memória e os dispositivos de Entrada e Saída.", 
          "Exibir o output e receber o input do usuário.",
          "Acelerar as tarefas do processador."
      ],
      "resposta": "0"
  },
  {
      "pergunta": "O que define uma arquitetura do tipo RISC?",
      "opcoes": [
          "Um conjunto de instruções muito complexas.",
          "Um conjunto grande de instruções simples.",
          "Um conjunto pequeno de instruções simples.",
          "Todas as instruções possuem tamanho fixo.",
          "Instruções com tempo de execução variável."
      ],
      "resposta": "2"
  },
  {
      "pergunta": "O que são hazards de pipeline?",
      "opcoes": [
          "Hazards são dependências entre instruções na execução de um programa.",
          "Hazards são erros de leitura da memória na execução de instruções como Store word ou Load word.",
          "Hazards são situações que param o pipeline, ou seja, impedem que a próxima instrução do pipeline seja executada no ciclo de clock correto."
      ],
      "resposta": "2"
  },
  {
      "pergunta": "Qual é a maior vantagem de uma arquitetura pipeline?",
      "opcoes": [
          "O conjunto de instruções necessário é menor.",
          "A eficiência é aumentada visto que é possivel executar partes de diferentes instruções no mesmo ciclo de clock.",
          "O circuito utilizado para sua implementação é muito simples em comparação com outras arquiteturas.",
          "Não existem problemas de dependência em arquiteturas pipeline."
      ],
      "resposta": "1"
  },
  {
      "pergunta": "Quanto a eficiência de memórias primária e secundária, o que é verdadeiro?",
      "opcoes": [
          "A memória primária é mais lenta que a memória secundária.",
          "A memória primária é mais rápida que a memória secundária, mas apenas em operações de escrita.",
          "A memória primária é mais rápida que a memória secundária como um todo.",
          "A memória primária é mais rápida que a memória secundária. No entanto, como a memória secundária pode ser acessada diretamente pelo processador, ela pode vir a ser mais rápida em algumas situações"
      ],
      "resposta": "2"
  },
  {
      "pergunta": "Em uma arquitetura pipeline, qual é o papel da forwarding unit (unidade de adiantamento)?",
      "opcoes": [
          "Adiantar o ciclo de clock atual, ou seja, acelerá-lo.",
          "Adiantar resultados calculados em ciclos de clock anteriores ao ciclo de clock atual.",
          "Adiantar dados vindos da memória, isto é, utilizar uma memória cache de forma que seja mais fácil a busca por um dado."
      ],
      "resposta": "1"
  }, 
  {
      "pergunta": "Em uma arquitetura pipeline, qual é o papel da unidade de controle?",
      "opcoes": [
          "A unidade de controle está encarregada de garantir que não haja dessincronização de clock.",
          "A unidade de controle é encarregada de interligar os componentes da arquitetura.",
          "A unidade de controle controla o clock.",
          "A unidade de controle só possui uma função: controlar as unidades de adiantamento e detecção de hazards.",
          "A unidade de controle é encarregada de reger os sinais de controle da arquitetura."
      ],
      "resposta": "4"
  }
];
